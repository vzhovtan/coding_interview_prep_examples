"""
Having sequence like
1, 11, 21, 1211, 111221, 312211, 13112221, 1113213211
The first term is "1"
Second term is "11", generated by reading first term as "One 1" (There is one 1 in previous term)
Third term is "21", generated by reading second term as "Two 1"
Fourth term is "1211", generated by reading third term as "One 2 One 1" 
"""

def countnndSay(n): 
    # Base cases 
    if (n == 1): 
        return "1"
    if (n == 2): 
        return "11"

    # Find n'th term by generating  all terms from 3 to n-1. Every term is generated using previous term 
    # Initialize previous term 
    s = "11" 
    for _ in range(3, n + 1): 
        # In for loop, previous character is processed in current  iteration. That is why a dummy character is added to make sure that loop runs one extra iteration. 
        s += '$'
        l = len(s) 
        cnt = 1 # Initialize count of matching chars 
        tmp = "" # Initialize i'th term in series 
        # Process previous term to find the next term 
        for j in range(1 , l): 
            # If current character does't match 
            if (s[j] != s[j - 1]): 
                # Append count of str[j-1] to temp 
                tmp += str(cnt + 0) 
                # Append str[j-1] 
                tmp += s[j - 1] 
                # Reset count 
                cnt = 1
            # If matches, then increment count of matching characters 
            else: 
                cnt += 1
        # Update str 
        s = tmp 
    return s
  
# driver code
N = 11
print(countnndSay(N))